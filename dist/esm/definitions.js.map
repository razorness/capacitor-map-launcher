{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,OAoFX;AApFD,WAAY,OAAO;IACjB,cAAc;IACd,yBAAyB;IACzB,0BAAuB,CAAA;IAEvB,eAAe;IACf,4BAAwB,CAAA;IAExB,kBAAkB;IAClB,6BAA6B;IAC7B,iCAA0B,CAAA;IAE1B,qBAAqB;IACrB,wBAAsB,CAAA;IAEtB,cAAc;IACd,0BAAuB,CAAA;IAEvB,QAAQ;IACR,wBAAsB,CAAA;IAEtB,eAAe;IACf,qCAA4B,CAAA;IAE5B,eAAe;IACf,qCAA4B,CAAA;IAE5B,cAAc;IACd,oCAA4B,CAAA;IAE5B,WAAW;IACX,oCAA4B,CAAA;IAE5B,UAAU;IACV,4BAAwB,CAAA;IAExB,WAAW;IACX,6BAA6B;IAC7B,oCAA4B,CAAA;IAE5B,aAAa;IACb,mCAA2B,CAAA;IAE3B,qBAAqB;IACrB,8BAAyB,CAAA;IAEzB,aAAa;IACb,wBAAsB,CAAA;IAEtB,cAAc;IACd,6BAA6B;IAC7B,0BAAuB,CAAA;IAEvB,aAAa;IACb,gCAA0B,CAAA;IAE1B,mBAAmB;IACnB,0CAA+B,CAAA;IAE/B,WAAW;IACX,8BAAyB,CAAA;IAEzB,eAAe;IACf,qCAA4B,CAAA;IAE5B,gBAAgB;IAChB,6BAA6B;IAC7B,wCAA8B,CAAA;IAE9B,gBAAgB;IAChB,6BAA6B;IAC7B,wCAA8B,CAAA;IAE9B,YAAY;IACZ,0BAAuB,CAAA;IAEvB,WAAW;IACX,0BAAuB,CAAA;IAEvB,OAAO;IACP,wBAAsB,CAAA;IAEtB,UAAU;IACV,6BAAwB,CAAA;AAC1B,CAAC,EApFW,OAAO,KAAP,OAAO,QAoFlB","sourcesContent":["export enum MapType {\n  /// Apple Maps\n  /// Only available on iOS\n  APPLE         = 'apple',\n\n  /// Google Maps\n  GOOGLE        = 'google',\n\n  /// Google Maps Go\n  /// Only available on Android\n  GOOGLE_GO     = 'googleGo',\n\n  /// Amap (Gaode Maps)\n  AMAP          = 'amap',\n\n  /// Baidu Maps\n  BAIDU         = 'baidu',\n\n  /// Waze\n  WAZE          = 'waze',\n\n  /// Yandex Maps\n  YANDEX_MAPS   = 'yandexMaps',\n\n  /// Yandex Navi\n  YANDEX_NAVI   = 'yandexNavi',\n\n  /// Citymapper\n  CITYMAPPER    = 'citymapper',\n\n  /// Maps.me\n  MAPSWITHME    = 'mapswithme',\n\n  /// OsmAnd\n  OSMAND        = 'osmand',\n\n  /// OsmAnd+\n  /// Only available on Android\n  OSMANDPLUS    = 'osmandplus',\n\n  /// DoubleGis\n  DOUBLE_GIS    = 'doubleGis',\n\n  /// Tencent (QQ Maps)\n  TENCENT       = 'tencent',\n\n  /// HERE WeGo\n  HERE          = 'here',\n\n  /// Petal Maps\n  /// Only available on Android\n  PETAL         = 'petal',\n\n  /// TomTom Go\n  TOMTOMGO      = 'tomtomgo',\n\n  /// TomTom Go Fleet\n  TOMTOMGOFLEET = 'tomtomgofleet',\n\n  /// CoPilot\n  COPILOT       = 'copilot',\n\n  /// Sygic Truck\n  SYGIC_TRUCK   = 'sygicTruck',\n\n  /// Flitsmeister\n  /// Only available on Android\n  FLITSMEISTER  = 'flitsmeister',\n\n  /// Truckmeister\n  /// Only available on Android\n  TRUCKMEISTER  = 'truckmeister',\n\n  // Naver Map\n  NAVER         = 'naver',\n\n  // KakaoMap\n  KAKAO         = 'kakao',\n\n  // TMAP\n  TMAP          = 'tmap',\n\n  /// MapyCZ\n  MAPY_CZ       = 'mapyCz',\n}\n\nexport interface MapModel {\n  mapType: MapType;\n  mapName: string;\n  packageName: string;\n  urlPrefix: string;\n}\n\nexport interface MapLauncherPlugin {\n  getInstalledMaps(): Promise<{ value: MapModel[] }>;\n\n  isMapAvailable(options: { mapType: MapType }): Promise<{ value: MapModel }>;\n\n  showMarker(options: { mapType: MapType, url: string, lat: number, lon: number, title?: string, description?: string }): Promise<void>;\n}\n"]}